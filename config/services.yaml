# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,DoctrineMigrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\UI\Actions\APIs\:
        resource: '../src/UI/Actions/APIs'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Application\APIs\Listener\ExceptionListener:
        tags:
        - { name: kernel.event_listener, event: kernel.exception }

    personal_api.event.token_expired:
        class: App\Application\APIs\Security\Subscribers\TokenExpiredSubscriber
        tags:
            - { name: kernel.event_subscriber, event: personal_authentication.token_expired }

    personal_api.event.token_invalid:
        class: App\Application\APIs\Security\Subscribers\TokenInvalidSubscriber
        tags:
            - { name: kernel.event_subscriber, event: personal_authentication.token_invalid }

    personal_api.event.no_token:
        class: App\Application\APIs\Security\Subscribers\NoTokenSubscriber
        tags:
            - { name: kernel.event_subscriber, event: personal_authentication.no_token }